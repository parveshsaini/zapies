// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  zaps Zap[]
  createdAt DateTime @default(now())
}

model Zap{
  id String @id @default(cuid())
  name String
  triggerId String
  userId String
  user User @relation(fields: [userId], references: [id])
  trigger Trigger?
  actions Action[]
  zapRuns ZapRun[]
  createdAt DateTime @default(now())
}

model ZapRun{
  id String @id @default(cuid())
  zapId String
  zap Zap @relation(fields: [zapId], references: [id])
  metadata Json @default("{}")
  
}

model Trigger{
  id String @id @default(cuid())
  zapId String @unique
  zap Zap @relation(fields: [zapId], references: [id])
  availableTriggerId String
  type AvailableTrigger @relation(fields: [availableTriggerId], references: [id])
  metadata Json @default("{}")

}

model AvailableTrigger{
  id String @id @default(cuid())
  name String
  image String
  triggers Trigger[]
}

model Action{
  id String @id @default(cuid())
  zapId String
  zap Zap @relation(fields: [zapId], references: [id])
  availableActionId String
  type AvailableAction @relation(fields: [availableActionId], references: [id])
  metadata Json @default("{}")
  sortingOrder Int @default(0)
}

model AvailableAction{
  id String @id @default(cuid())
  name String
  image String
  actions Action[]
}
